name: Simple Auto Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.1.0)'
        required: true
        default: 'v1.0.0'

jobs:
  release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Extract version info
      id: version
      run: |
        if ("${{ github.event_name }}" -eq "workflow_dispatch") {
          $version = "${{ github.event.inputs.version }}"
        } else {
          $version = "${{ github.ref_name }}"
        }
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "VERSION=$version" >> $env:GITHUB_ENV
        
    - name: Read current version from module.prop
      id: current_version
      run: |
        $content = Get-Content "module.prop"
        $currentVersion = ($content | Where-Object { $_ -match "^version=" }) -replace "^version=", ""
        $currentVersionCode = ($content | Where-Object { $_ -match "^versionCode=" }) -replace "^versionCode=", ""
        echo "current_version=$currentVersion" >> $env:GITHUB_OUTPUT
        echo "current_version_code=$currentVersionCode" >> $env:GITHUB_OUTPUT
        
    - name: Create zip archive
      run: |
        mkdir module-package
        # 复制META-INF目录结构
        mkdir module-package\META-INF\com\google\android
        copy-item "META-INF\com\google\android\update-binary" "module-package\META-INF\com\google\android\update-binary"
        copy-item "META-INF\com\google\android\updater-script" "module-package\META-INF\com\google\android\updater-script"
        # 复制其他必要文件
        copy-item "post-fs-data.sh" "module-package\post-fs-data.sh"
        copy-item "module.prop" "module-package\module.prop"
        copy-item "README.md" "module-package\README.md"
        # 打包指定文件
        Compress-Archive -Path "module-package\META-INF", "module-package\post-fs-data.sh", "module-package\module.prop", "module-package\README.md" -DestinationPath "multi-certificate-installer-${{ steps.version.outputs.version }}.zip" -Force
        remove-item -path "module-package" -recurse -force
        
    - name: Generate update.json
      run: |
        $newVersionCode = [int]"${{ steps.current_version.outputs.current_version_code }}" + 1
        $updateJson = @{
          version = "${{ env.VERSION }}"
          versionCode = "$newVersionCode"
          zipUrl = "${{ github.server_url }}/${{ github.repository }}/releases/download/${{ env.VERSION }}/multi-certificate-installer-${{ env.VERSION }}.zip"
          changelog = "自动发布版本 ${{ env.VERSION }}"
          releaseDate = Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ"
        } | ConvertTo-Json -Depth 10
        $updateJson | Set-Content "update.json"
        
    - name: Create and push tag
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git tag ${{ env.VERSION }}
        git push origin ${{ env.VERSION }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "多证书安装器 ${{ env.VERSION }}"
        body_path: README.md
        files: |
          multi-certificate-installer-${{ env.VERSION }}.zip
          update.json
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Show version update info
      run: |
        Write-Host "📋 Version update required:" -ForegroundColor Yellow
        Write-Host "   Current version: ${{ steps.current_version.outputs.current_version }}" -ForegroundColor White
        Write-Host "   Current versionCode: ${{ steps.current_version.outputs.current_version_code }}" -ForegroundColor White
        Write-Host "   New versionCode should be: $([int]"${{ steps.current_version.outputs.current_version_code }}" + 1)" -ForegroundColor White
        Write-Host "" -ForegroundColor White
        Write-Host "📝 Please manually update module.prop with:" -ForegroundColor Cyan
        Write-Host "   version=${{ env.VERSION }}" -ForegroundColor White
        Write-Host "   versionCode=$([int]"${{ steps.current_version.outputs.current_version_code }}" + 1)" -ForegroundColor White
        Write-Host "" -ForegroundColor White
        Write-Host "💡 Or run the setup script: .\setup-automation.ps1 -Version ${{ env.VERSION }}" -ForegroundColor Green